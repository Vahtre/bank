plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.testassignment'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
			runtimeClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
			srcDir file('src/integrationTest/java')
		}
		resources {
			srcDir file('src/integrationTest/resources')
		}
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
	useJUnitPlatform()
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.named('processIntegrationTestResources') {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}